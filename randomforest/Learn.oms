val images = Val[Array[File]]
val nbTrees   = Val[Int]
val treeDepth = Val[Int]
val kFold = 10

val random = new util.Random(42)
val imagesArrays: Array[Array[File]] = 
  (0 until kFold).map(i => random.shuffle((workDirectory / "images").listFiles).toArray[File]).toArray

val learningOutput = Val[String]

val learning = PythonTask(
  workDirectory / "forest.py",
  arguments = "images ${nbTrees} ${treeDepth}",
  stdOut = learningOutput,
  libraries = Seq("matplotlib", "sklearn", "pillow", "scikit-image")
) set (
  inputs += (nbTrees, treeDepth),
  inputFileArrays += (images, "images/image", ".jpg"),
  outputs += (nbTrees, treeDepth)
)

DirectSampling(
  sampling =   
    (nbTrees in (5 to 25 by 5)) x
    (treeDepth in (3 to 18 by 3)),
  evaluation = 
    DirectSampling(
      sampling = (images in imagesArrays),
      evaluation = learning hook (workDirectory / "points.csv", Seq(nbTrees, treeDepth, learningOutput))
    )
)
