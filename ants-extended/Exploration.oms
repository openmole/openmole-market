import java.text.SimpleDateFormat
import java.util.Date

// Define the input variables
val population = Val[Double]
val diffusionRate = Val[Double]
val evaporationRate = Val[Double]
val wiggleAngle = Val[Double]

// Define the output variables
val food1 = Val[Double]
val food2 = Val[Double]
val food3 = Val[Double]

val obj = Val[Double]
val seed = Val[Int]
val id = Val[Int]

val env = LocalEnvironment(64)

val purpose = "LHS_REPETS_LOCAL"

// Define the NetlogoTask
// experiments:setup-experiment [setuptype antpop wangle diffrate evaprate]
val cmds = Seq("experiments:setup-experiment \"fixed\" ${population} ${wiggleAngle} ${diffusionRate} ${evaporationRate} ${seed}","experiments:run-experiment")

val ants =
  NetLogo5Task(workDirectory / "model" / "HEADLESS_ants.nlogo", cmds, seed = seed,embedWorkspace=true) set (
    // Map the OpenMOLE variables to NetLogo variables
    (inputs, outputs) += (population, diffusionRate, evaporationRate, wiggleAngle, seed, id),
    outputs += food1 mapped "final-ticks-food1", 
    outputs += food2 mapped "final-ticks-food2",
    outputs += food3 mapped "final-ticks-food3"
  )


val replications =
  Replication (
    evaluation = ants,
    seed = seed,
    sample = 64
  )



DirectSampling(
  evaluation = replications,
  sampling =
    LHS(
      sample = 10,
      factor = Seq(
        diffusionRate in (1.0, 100.0),
        evaporationRate in (1.0, 100.0),
        population in (100.0,200.0),
        wiggleAngle in (5.0,90.0))
    ) withIndex id
) on env hook (workDirectory / "exploration" / (experiment.launchDate+"_"+purpose+".csv")) 


