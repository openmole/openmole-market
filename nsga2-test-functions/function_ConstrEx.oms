//model inputs
val x = Val[Double]
val y = Val[Double]

//model outputs
val f1 = Val[Double]
val f2 = Val[Double]


val testFunctionConstrEx =
    ScalaTask("""
        val f1 = x;
        val f2 = (1 + y) / x;        
        """) set (
    inputs += x, 
    inputs += y,
    outputs += f1, 
    outputs += f2
    )
val evolutionConstrEx =
  NSGA2Evolution(
    genome = Seq(
      x in (0.1, 1.0),
      y in (0.0, 1.0)
    ),
    objective = Seq(f1, f2),
    evaluation = testFunctionConstrEx, 
    parallelism = 10,
    termination = 1000
  )
  
val savePopulation = SavePopulationHook(evolutionConstrEx, workDirectory/"results/ConstrEx")

evolutionConstrEx on LocalEnvironment(4) hook savePopulation
